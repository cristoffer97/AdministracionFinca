
package VG;

import Modelo.Cuadrillas;
import Modelo.Tarea;
import Modelo.Trabajadores;
import controlador.ConsultasMYSQL;
import controlador.ConsultasTrabajadores;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import controlador.*;

/**
 *
 * @author Cristoffer
 */
public class GTrabajador extends javax.swing.JPanel implements Configuracion{
  private static int codtrabaj,telefono,cuadrilla,tipotrabajador;
	private static String nombre;
        private static String apellido;
	private static boolean podador;
    private DefaultComboBoxModel modeloCuadrilla=new DefaultComboBoxModel<>();
    private DefaultComboBoxModel modeloTipoTrabajo=new DefaultComboBoxModel<>();
    private ArrayList<Cuadrillas> listaCuadrilla=new ArrayList<Cuadrillas>();
    private ArrayList<String> listaTipos=new ArrayList<>();
    private static ArrayList<Trabajadores> lista_trabajabadores=new ArrayList<>();
    private DefaultTableModel modeloTabla=new DefaultTableModel();
    ConsultasMYSQL consultas1=new ConsultasMYSQL();
    ConsultasTrabajadores consultas=new ConsultasTrabajadores();
    /**
     * Creates new form GTrabajador
     */
    public GTrabajador() {
       //  iniciarFormulario();        
        comprobarCuadrillas();
        comprobarTiposTrabajadores();
        sacarTrabajadoresdeBD();
        agregarModeloTabla();
        initComponents();
        
        jcomboCuadrilla.addItem("Seleccione Cuadrilla");
        jcomboTipo.addItem("Seleccione tipo");
        setSize(tamañoVentana, tamañoVentana);
        
        llenarModeloComboBoxCuadrilla();
        llenarModeloComboBoxTiposTrabajadores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Titulo = new javax.swing.JLabel();
        btnoBuscar = new javax.swing.JButton();
        btnoModificar = new javax.swing.JButton();
        btnoInsertar = new javax.swing.JButton();
        btnoBaja = new javax.swing.JButton();
        etiquetaCuadrilla = new javax.swing.JLabel();
        etiquetaApellidos = new javax.swing.JLabel();
        etiquetaCodigo = new javax.swing.JLabel();
        cajaCodigo = new javax.swing.JTextField();
        cajaApellidos = new javax.swing.JTextField();
        jcomboCuadrilla = new javax.swing.JComboBox<>();
        chechPodador = new javax.swing.JCheckBox();
        etiquetaTipo = new javax.swing.JLabel();
        etiquetaTelefono = new javax.swing.JLabel();
        etiquetaNombre = new javax.swing.JLabel();
        cajaNombre = new javax.swing.JTextField();
        cajaTelefono = new javax.swing.JTextField();
        jcomboTipo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        tituloTabla = new javax.swing.JLabel();
        btnoLimpiarCampos = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 102, 0));

        Titulo.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        Titulo.setForeground(new java.awt.Color(255, 255, 255));
        Titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Titulo.setText("GESTION DE LOS TRABAJADORES");

        btnoBuscar.setBackground(new java.awt.Color(0, 0, 0));
        btnoBuscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnoBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnoBuscar.setText("Buscar");
        btnoBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnoBuscarActionPerformed(evt);
            }
        });

        btnoModificar.setBackground(new java.awt.Color(0, 0, 0));
        btnoModificar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnoModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnoModificar.setText("Modificar");
        btnoModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnoModificarActionPerformed(evt);
            }
        });

        btnoInsertar.setBackground(new java.awt.Color(0, 0, 0));
        btnoInsertar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnoInsertar.setForeground(new java.awt.Color(255, 255, 255));
        btnoInsertar.setText("Insertar");
        btnoInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnoInsertarActionPerformed(evt);
            }
        });

        btnoBaja.setBackground(new java.awt.Color(0, 0, 0));
        btnoBaja.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnoBaja.setForeground(new java.awt.Color(255, 255, 255));
        btnoBaja.setText("Baja");
        btnoBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnoBajaActionPerformed(evt);
            }
        });

        etiquetaCuadrilla.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaCuadrilla.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        etiquetaCuadrilla.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaCuadrilla.setText("Cuadrilla");

        etiquetaApellidos.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaApellidos.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        etiquetaApellidos.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaApellidos.setText("Apellidos");

        etiquetaCodigo.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaCodigo.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        etiquetaCodigo.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaCodigo.setText("Codigo");

        cajaCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaCodigoActionPerformed(evt);
            }
        });

        cajaApellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaApellidosActionPerformed(evt);
            }
        });

        jcomboCuadrilla.setModel(modeloCuadrilla);
        jcomboCuadrilla.setSelectedItem(modeloCuadrilla);
        jcomboCuadrilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomboCuadrillaActionPerformed(evt);
            }
        });

        chechPodador.setBackground(new java.awt.Color(102, 102, 0));
        chechPodador.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        chechPodador.setForeground(new java.awt.Color(255, 255, 255));
        chechPodador.setText("¿Sabe Podar?");

        etiquetaTipo.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaTipo.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        etiquetaTipo.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaTipo.setText("Tipo");

        etiquetaTelefono.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaTelefono.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        etiquetaTelefono.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaTelefono.setText("Telefono");

        etiquetaNombre.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaNombre.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        etiquetaNombre.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaNombre.setText("Nombre");

        cajaNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaNombreActionPerformed(evt);
            }
        });

        cajaTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaTelefonoActionPerformed(evt);
            }
        });

        jcomboTipo.setModel(modeloTipoTrabajo);
        jcomboTipo.setSelectedItem(modeloTipoTrabajo);

        jTable1.setModel(modeloTabla);
        jScrollPane1.setViewportView(jTable1);

        tituloTabla.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        tituloTabla.setForeground(new java.awt.Color(255, 255, 255));
        tituloTabla.setText("LISTA DE TRABAJADORES");

        btnoLimpiarCampos.setBackground(new java.awt.Color(0, 0, 0));
        btnoLimpiarCampos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnoLimpiarCampos.setForeground(new java.awt.Color(255, 255, 255));
        btnoLimpiarCampos.setText("Limpiar");
        btnoLimpiarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnoLimpiarCamposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(etiquetaCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cajaCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnoInsertar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(chechPodador))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(40, 40, 40)
                                                .addComponent(btnoModificar)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(etiquetaApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cajaApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(etiquetaCuadrilla, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jcomboCuadrilla, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(etiquetaTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jcomboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(etiquetaNombre)
                                .addGap(18, 18, 18)
                                .addComponent(cajaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(etiquetaTelefono)
                                .addGap(18, 18, 18)
                                .addComponent(cajaTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tituloTabla)
                                        .addGap(199, 199, 199))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnoBuscar)
                                        .addGap(32, 32, 32)
                                        .addComponent(btnoBaja)
                                        .addGap(43, 43, 43)))
                                .addComponent(btnoLimpiarCampos)
                                .addGap(0, 1, Short.MAX_VALUE))))
                    .addComponent(Titulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Titulo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(etiquetaCodigo)
                            .addComponent(cajaCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cajaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaNombre))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cajaApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaApellidos))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etiquetaTelefono, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cajaTelefono, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcomboCuadrilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaCuadrilla)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jcomboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(etiquetaTipo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chechPodador)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnoInsertar)
                    .addComponent(btnoModificar)
                    .addComponent(btnoBuscar)
                    .addComponent(btnoBaja)
                    .addComponent(btnoLimpiarCampos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tituloTabla)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnoBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnoBuscarActionPerformed
        try{
            String codigo = cajaCodigo.getText();
            int codigodTrabajador = Integer.parseInt(codigo);
            Trabajadores trabajador=consultas.buscarTrabajador(codigodTrabajador);

            cajaCodigo.setText(codigo);
            cajaNombre.setText(trabajador.getNombre());
            cajaApellidos.setText(trabajador.getApellidos());
            String telefono=String.valueOf(trabajador.getTelefono());
            cajaTelefono.setText(telefono);

        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Revisa el Codigo del trabajador", "Error al buscar", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnoBuscarActionPerformed

    private void btnoModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnoModificarActionPerformed
        try{
            String codigo=cajaCodigo.getText();
            codtrabaj=Integer.parseInt(codigo);
            nombre=cajaNombre.getText();
            apellido=cajaApellidos.getText();
            String tel=cajaTelefono.getText();
            telefono=Integer.parseInt(tel);
            String cua =(String)jcomboCuadrilla.getSelectedItem().toString();
            for (Cuadrillas cuadrillas : listaCuadrilla) {
                if(cua.equals(cuadrillas.toString())){
                    cuadrilla=cuadrillas.getCodigoCuadrilla();
                }
            }
            String tipo =(String)jcomboTipo.getSelectedItem().toString();
            switch (tipo) {
                case "Encargado":
                tipotrabajador=1;
                break;
                case "Manijero":
                tipotrabajador=2;
                break;
                case "Tractorista":
                tipotrabajador=3;
                break;
                case "Jornalero":
                tipotrabajador=4;
                break;
                default:
                break;
            }

            if(chechPodador.isSelected()==true){
                podador=true;
            }else{
                podador=false;
            }

            if(consultas.actualizarDatosdeTrabajador(codtrabaj,nombre,apellido,telefono,cuadrilla,podador,tipotrabajador)==true){
                JOptionPane.showMessageDialog(null, "Se ha actualizado los datos del trabajador");
                ActualizarTabla();
            }else{
                JOptionPane.showMessageDialog(null, "No se ha podido actualizar los datos");
                ActualizarTabla();
            }

        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Revise los datos del empleado", "Error al modificar los datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnoModificarActionPerformed

    private void btnoInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnoInsertarActionPerformed
        try{
            String codigo=cajaCodigo.getText();
            codtrabaj=Integer.parseInt(codigo);
            nombre=cajaNombre.getText();
            apellido=cajaApellidos.getText();
            String tel=cajaTelefono.getText();
            telefono=Integer.parseInt(tel);

            String cua =(String)jcomboCuadrilla.getSelectedItem().toString();
            for (Cuadrillas cuadrillas : listaCuadrilla) {
                if(cua.equals(cuadrillas.toString())){
                    cuadrilla=cuadrillas.getCodigoCuadrilla();
                }
            }
            /*  String cuadrillaseleccionada = (String) jcomboCuadrilla.getSelectedItem(); // obtiene el elemento seleccionado
            if(cuadrillaseleccionada.equals("Seleccione un Director")){
                JOptionPane.showMessageDialog(null, "Seleccione un Director valido ");
            }else{
                String[] cuadr = cuadrillaseleccionada.split("--"); // separa la cadena en partes usando la coma y el espacio como separadores
                String cua = cuadr[0];
                cuadrilla=Integer.parseInt(cua);
            }*/
            String tipo =(String)jcomboTipo.getSelectedItem().toString();

            switch (tipo) {
                case "Encargado":
                tipotrabajador=1;
                break;
                case "Manijero":
                tipotrabajador=2;
                break;
                case "Tractorista":
                tipotrabajador=3;
                break;
                case "Jornalero":
                tipotrabajador=4;
                break;
                default:
                break;
            }

            if(chechPodador.isSelected()==true){
                podador=true;
            }else{
                podador=false;
            }

            if(consultas.IngresarTrabajador(codtrabaj, nombre, apellido, telefono,cuadrilla, podador,tipotrabajador)==true){
                JOptionPane.showMessageDialog(null, "El trabajador se ha guardado");
                limpiarcajas();
                ActualizarTabla();

            }

        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Revise los datos del empleado", "Error al ingresar los datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnoInsertarActionPerformed

    private void btnoBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnoBajaActionPerformed
        try{
            String codigo=cajaCodigo.getText();
            codtrabaj=Integer.parseInt(codigo);

            if(consultas.BorrarTrabajador(codtrabaj)==true){
                JOptionPane.showMessageDialog(null, "Se ha dado de baja al trabajador");
            }
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Revisa el Codigo del trabajador", "Error al dar de baja", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnoBajaActionPerformed

    private void cajaCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaCodigoActionPerformed
        String codigo=cajaCodigo.getText();
        codtrabaj=Integer.parseInt(codigo);
        if(consultas.comprobarCodigoValido(codtrabaj)==true){
            cajaCodigo.setBorder(BorderFactory.createLineBorder(Color.RED));

        }else{
            cajaCodigo.setBorder(BorderFactory.createLineBorder(Color.green));
        }
    }//GEN-LAST:event_cajaCodigoActionPerformed

    private void cajaApellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaApellidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cajaApellidosActionPerformed

    private void jcomboCuadrillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomboCuadrillaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcomboCuadrillaActionPerformed

    private void cajaNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cajaNombreActionPerformed

    private void cajaTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cajaTelefonoActionPerformed

    private void btnoLimpiarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnoLimpiarCamposActionPerformed
        limpiarcajas();

    }//GEN-LAST:event_btnoLimpiarCamposActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Titulo;
    private javax.swing.JButton btnoBaja;
    private javax.swing.JButton btnoBuscar;
    private javax.swing.JButton btnoInsertar;
    private javax.swing.JButton btnoLimpiarCampos;
    private javax.swing.JButton btnoModificar;
    private javax.swing.JTextField cajaApellidos;
    private javax.swing.JTextField cajaCodigo;
    private javax.swing.JTextField cajaNombre;
    private javax.swing.JTextField cajaTelefono;
    private javax.swing.JCheckBox chechPodador;
    private javax.swing.JLabel etiquetaApellidos;
    private javax.swing.JLabel etiquetaCodigo;
    private javax.swing.JLabel etiquetaCuadrilla;
    private javax.swing.JLabel etiquetaNombre;
    private javax.swing.JLabel etiquetaTelefono;
    private javax.swing.JLabel etiquetaTipo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> jcomboCuadrilla;
    private javax.swing.JComboBox<String> jcomboTipo;
    private javax.swing.JLabel tituloTabla;
    // End of variables declaration//GEN-END:variables
private void llenarModeloComboBoxCuadrilla(){
      
        for (Cuadrillas cuadrillas : listaCuadrilla) {
      modeloCuadrilla.addElement(cuadrillas);      
            
        }
    }
       
         private void llenarModeloComboBoxTiposTrabajadores(){
        for (String tipo : listaTipos) {
            modeloTipoTrabajo.addElement(tipo);      
            
            
        }
    }
    
      private void comprobarCuadrillas(){
        listaCuadrilla=consultas1.comprobarCuadrillas();
        
        
    }
      
      private void comprobarTiposTrabajadores(){
         listaTipos=consultas1.comprobarTipos();
      }
       private void sacarTrabajadoresdeBD(){
        lista_trabajabadores=consultas1.sacarTrabajadoresdeBD();
        
    }
     private void agregarTrabajador(){
         for (Trabajadores trabajador : lista_trabajabadores) {
            String poda;
            
            
       int cod_Trabajador=trabajador.getCod_Trabajador();
        String codigo=String.valueOf(cod_Trabajador);
        int tlfn=trabajador.getTelefono();
        String telefono=String.valueOf(tlfn);
        String nombre=trabajador.getNombre();
        String apellidos=trabajador.getApellidos();
        int cuadrilla=trabajador.getCuadrilla();
        String grupo=String.valueOf(cuadrilla);
        String TipoTrabajador=trabajador.getTipoTrabajador();
        boolean podador=trabajador.isPodador();
         if(podador==false){
          poda="No";
        }else{
          poda="Si";  
        }
        String[] jornal={codigo,nombre,apellidos,telefono,grupo,poda,TipoTrabajador};
        modeloTabla.addRow(jornal);
        }    
        
         
     }
     
    
       private void agregarModeloTabla(){
        String[] datosTrabajador={"Cod_Trabajador","Nombre","Apellidos","Telefono","Cuadrilla","Podador","Tipo"};
           for (int i = 0; i < datosTrabajador.length; i++) {
               modeloTabla.addColumn(datosTrabajador[i]);
           }
                
        for (Trabajadores trabajador : lista_trabajabadores) {
            String poda;
                      
       int cod_Trabajador=trabajador.getCod_Trabajador();
        String codigo=String.valueOf(cod_Trabajador);
        int tlfn=trabajador.getTelefono();
        String telefono=String.valueOf(tlfn);
        String nombre=trabajador.getNombre();
        String apellidos=trabajador.getApellidos();
        int cuadrilla=trabajador.getCuadrilla();
        String grupo=String.valueOf(cuadrilla);
        String TipoTrabajador=trabajador.getTipoTrabajador();
        boolean podador=trabajador.isPodador();
         if(podador==false){
          poda="No";
        }else{
          poda="Si";  
        }
        String[] jornal={codigo,nombre,apellidos,telefono,grupo,poda,TipoTrabajador};
        modeloTabla.addRow(jornal);
        }    
        
     
    }

    private void limpiarcajas() {
      cajaCodigo.setText("");
		cajaNombre.setText("");
		cajaApellidos.setText("");
		cajaTelefono.setText("");
                jcomboCuadrilla.setSelectedIndex(0);
                jcomboTipo.setSelectedIndex(0);
    }

    private void ActualizarTabla() {
         sacarTrabajadoresdeBD();
                agregarTrabajador();
                
    }
}
