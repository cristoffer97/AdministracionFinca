/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Modelo.Tarea;
import controlador.ConexionBD;
import controlador.ConsultasMYSQL;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Cristoffer
 */
public class VentanaTareas extends javax.swing.JFrame {

    private DefaultTableModel tablaTarea = new DefaultTableModel();
    private DefaultTableModel tablaRegistroTarea = new DefaultTableModel();
    private static ArrayList<Tarea> Tareas;
    ConexionBD cbd = new ConexionBD();
    private ConsultasMYSQL consultas = new ConsultasMYSQL();

    public VentanaTareas() {
        //iniciarFormulario();
        obtenerTareas();
        agregarModeloTabla();
        //agregarModeloTablaregistros();
        //obtenerRegistroTareas();
        //tabla.setBackground(Color.red);
        initComponents();
        setLocationRelativeTo(null);
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/icono.jpg")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        opcionGestion = new javax.swing.JMenu();
        GestionTrabajadores = new javax.swing.JMenuItem();
        GestionTractor = new javax.swing.JMenuItem();
        GestionCuadrilla = new javax.swing.JMenuItem();
        opcionListar = new javax.swing.JMenu();
        listaTrabajadores = new javax.swing.JMenuItem();
        listaTrabajadorescuadrillas = new javax.swing.JMenuItem();
        listaTractores = new javax.swing.JMenuItem();
        opcionInformes = new javax.swing.JMenu();
        tiposTrabajadores = new javax.swing.JMenuItem();
        cantTrabajadoreCuadrilla = new javax.swing.JMenuItem();
        ConsultarInformesPeritos = new javax.swing.JMenuItem();
        Opciones = new javax.swing.JMenu();
        Ajustes = new javax.swing.JMenuItem();
        Salir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TAREAS EN PROGRESO");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(51, 153, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TAREAS ASIGNADAS");

        tabla.setModel(tablaTarea);
        jScrollPane1.setViewportView(tabla);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("REGISTROS DE TAREAS");

        tabla1.setModel(tablaRegistroTarea);
        jScrollPane2.setViewportView(tabla1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 733, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenuBar1.setBackground(new java.awt.Color(0, 0, 0));
        jMenuBar1.setBorder(null);

        opcionGestion.setText("Gestiones");
        opcionGestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionGestionActionPerformed(evt);
            }
        });

        GestionTrabajadores.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.ALT_DOWN_MASK));
        GestionTrabajadores.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        GestionTrabajadores.setText("Trabajadores");
        GestionTrabajadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GestionTrabajadoresActionPerformed(evt);
            }
        });
        opcionGestion.add(GestionTrabajadores);

        GestionTractor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_DOWN_MASK));
        GestionTractor.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        GestionTractor.setText("Tractores");
        GestionTractor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GestionTractorActionPerformed(evt);
            }
        });
        opcionGestion.add(GestionTractor);

        GestionCuadrilla.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        GestionCuadrilla.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        GestionCuadrilla.setText("Cuadrilla");
        GestionCuadrilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GestionCuadrillaActionPerformed(evt);
            }
        });
        opcionGestion.add(GestionCuadrilla);

        jMenuBar1.add(opcionGestion);

        opcionListar.setText("Consultar");

        listaTrabajadores.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        listaTrabajadores.setText("Lista Trabajadores");
        listaTrabajadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaTrabajadoresActionPerformed(evt);
            }
        });
        opcionListar.add(listaTrabajadores);

        listaTrabajadorescuadrillas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        listaTrabajadorescuadrillas.setText("Trabajadores por Cuadrilla");
        listaTrabajadorescuadrillas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaTrabajadorescuadrillasActionPerformed(evt);
            }
        });
        opcionListar.add(listaTrabajadorescuadrillas);

        listaTractores.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        listaTractores.setText("Lista Tractores");
        listaTractores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaTractoresActionPerformed(evt);
            }
        });
        opcionListar.add(listaTractores);

        jMenuBar1.add(opcionListar);

        opcionInformes.setText("Informes");
        opcionInformes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionInformesActionPerformed(evt);
            }
        });

        tiposTrabajadores.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_J, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        tiposTrabajadores.setText("tipo trabajadores");
        tiposTrabajadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tiposTrabajadoresActionPerformed(evt);
            }
        });
        opcionInformes.add(tiposTrabajadores);

        cantTrabajadoreCuadrilla.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        cantTrabajadoreCuadrilla.setText("cantidad trabajadores");
        cantTrabajadoreCuadrilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantTrabajadoreCuadrillaActionPerformed(evt);
            }
        });
        opcionInformes.add(cantTrabajadoreCuadrilla);

        ConsultarInformesPeritos.setText("Informes Peritos");
        ConsultarInformesPeritos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultarInformesPeritosActionPerformed(evt);
            }
        });
        opcionInformes.add(ConsultarInformesPeritos);

        jMenuBar1.add(opcionInformes);

        Opciones.setText("Opciones");
        Opciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpcionesActionPerformed(evt);
            }
        });

        Ajustes.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_J, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Ajustes.setText("Ajustes");
        Ajustes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjustesActionPerformed(evt);
            }
        });
        Opciones.add(Ajustes);

        Salir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        Opciones.add(Salir);

        jMenuBar1.add(Opciones);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listaTrabajadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaTrabajadoresActionPerformed
        ListarTrabajadores lt = new ListarTrabajadores();
        lt.setVisible(true);
        dispose();
    }//GEN-LAST:event_listaTrabajadoresActionPerformed

    private void listaTractoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaTractoresActionPerformed
        ListarTractores ltractores = new ListarTractores();
        ltractores.setVisible(true);
        dispose();
    }//GEN-LAST:event_listaTractoresActionPerformed

    private void listaTrabajadorescuadrillasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaTrabajadorescuadrillasActionPerformed
        ListarTrabajadoresPorCuadrillas ltc = new ListarTrabajadoresPorCuadrillas();
        ltc.setVisible(true);
        dispose();
    }//GEN-LAST:event_listaTrabajadorescuadrillasActionPerformed

    private void tiposTrabajadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tiposTrabajadoresActionPerformed

        try {
            //Indicamos las carpetas donde se encuentra el origen y destino del informe
            String reportSource = "src/Informes/informesPlantilla/InformeCantidadTIPOSTRABAJADORES.jrxml";
            //String reportSource = "src/informes/informesPlantilla/Informe1_pedidos.jrxml";
            String reportDest = "src/informes/InformesResultado/informe.html";

            //Crear un mapa para guardar parametros que podemos pasar al informe
            Map<String, Object> params = new HashMap<String, Object>();
            //Ojo!! en este ejemplo no se necesitan pasar
            /*  params.put("reportTitle", "Informe Hola Mundo");
            params.put("author", "Encarna Balsera Quintana");
            params.put("startDate", (new java.util.Date()).toString());*/

            //Compilamos el informe .jrxml  para generar el .jasper
            JasperReport jasperReport = JasperCompileManager.compileReport(reportSource);

            //Creamos la conexion a la bd para poder rellenar el .jasper con los datos de la bd
            ConexionBD cbd = new ConexionBD();
            Connection conn = cbd.abrirConexion();

//Cargamos los datos en el jasper pasandole los parámetros y la conexion a la BD
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, params, conn);

            //Exportamos el informe
            JasperExportManager.exportReportToHtmlFile(jasperPrint, reportDest);
            // JasperExportManager.exportReportToPdf(jasperPrint); //Error: no funciona

//Y lo visualizamos
            JasperViewer.viewReport(jasperPrint);
        } catch (JRException ex) {
            Logger.getLogger(VentanaTareas.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_tiposTrabajadoresActionPerformed

    private void cantTrabajadoreCuadrillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantTrabajadoreCuadrillaActionPerformed
        try {
            //Indicamos las carpetas donde se encuentra el origen y destino del informe
            String reportSource = "src/Informes/informesPlantilla/CantidadPersonas.jrxml";
            //String reportSource = "src/informes/informesPlantilla/Informe1_pedidos.jrxml";
            String reportDest = "src/informes/InformesResultado/informe.html";

            //Crear un mapa para guardar parametros que podemos pasar al informe
            Map<String, Object> params = new HashMap<String, Object>();
            //Ojo!! en este ejemplo no se necesitan pasar
            /*  params.put("reportTitle", "Informe Hola Mundo");
            params.put("author", "Encarna Balsera Quintana");
            params.put("startDate", (new java.util.Date()).toString());*/

            //Compilamos el informe .jrxml  para generar el .jasper
            JasperReport jasperReport = JasperCompileManager.compileReport(reportSource);

            //Creamos la conexion a la bd para poder rellenar el .jasper con los datos de la bd
            ConexionBD cbd = new ConexionBD();
            Connection conn = cbd.abrirConexion();

//Cargamos los datos en el jasper pasandole los parámetros y la conexion a la BD
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, params, conn);

            //Exportamos el informe
            JasperExportManager.exportReportToHtmlFile(jasperPrint, reportDest);
            // JasperExportManager.exportReportToPdf(jasperPrint); //Error: no funciona

//Y lo visualizamos
            JasperViewer.viewReport(jasperPrint);
        } catch (JRException ex) {
            Logger.getLogger(VentanaTareas.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_cantTrabajadoreCuadrillaActionPerformed

    private void opcionInformesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionInformesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opcionInformesActionPerformed

    private void AjustesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjustesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AjustesActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        dispose();
        AccessoAlSistema as = new AccessoAlSistema();
        as.setVisible(true);
    }//GEN-LAST:event_SalirActionPerformed

    private void OpcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpcionesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OpcionesActionPerformed

    private void ConsultarInformesPeritosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultarInformesPeritosActionPerformed
        Informes_Peritos ip = new Informes_Peritos();
        ip.setVisible(true);

    }//GEN-LAST:event_ConsultarInformesPeritosActionPerformed

    private void GestionTrabajadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GestionTrabajadoresActionPerformed
        GestionTrabajadores ventana = new GestionTrabajadores();
        ventana.setVisible(true);
        dispose();
    }//GEN-LAST:event_GestionTrabajadoresActionPerformed

    private void GestionTractorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GestionTractorActionPerformed
        GestionTractores ventana = new GestionTractores();
        ventana.setVisible(true);
        dispose();
    }//GEN-LAST:event_GestionTractorActionPerformed

    private void GestionCuadrillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GestionCuadrillaActionPerformed
        Gestion_Cuadrillas ventana = new Gestion_Cuadrillas();
        ventana.setVisible(true);
        dispose();
    }//GEN-LAST:event_GestionCuadrillaActionPerformed

    private void opcionGestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionGestionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opcionGestionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaTareas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaTareas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaTareas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaTareas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaTareas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Ajustes;
    private javax.swing.JMenuItem ConsultarInformesPeritos;
    private javax.swing.JMenuItem GestionCuadrilla;
    private javax.swing.JMenuItem GestionTrabajadores;
    private javax.swing.JMenuItem GestionTractor;
    private javax.swing.JMenu Opciones;
    private javax.swing.JMenuItem Salir;
    private javax.swing.JMenuItem cantTrabajadoreCuadrilla;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem listaTrabajadores;
    private javax.swing.JMenuItem listaTrabajadorescuadrillas;
    private javax.swing.JMenuItem listaTractores;
    private javax.swing.JMenu opcionGestion;
    private javax.swing.JMenu opcionInformes;
    private javax.swing.JMenu opcionListar;
    private javax.swing.JTable tabla;
    private javax.swing.JTable tabla1;
    private javax.swing.JMenuItem tiposTrabajadores;
    // End of variables declaration//GEN-END:variables
 /**
     * Agregamos a nuestra tabla las tareas obtenidas
     */
    private void agregarModeloTabla() {
        tablaTarea.addColumn("Cuadrilla");
        tablaTarea.addColumn("Tarea");
        tablaTarea.addColumn("Fruta");
        tablaTarea.addColumn("Variedad");
        tablaTarea.addColumn("Fecha");
        tablaTarea.addColumn("Tipo Recogida");
        tablaTarea.addColumn("CantidadRecogida");
        for (Tarea t : Tareas) {

            String codigo = String.valueOf(t.getCuadrilla().getCodigoCuadrilla());
            String tarea = t.getTarea();
            String fruta = t.getFruta();
            String variedad = t.getVariedad();
            String Recogida = t.getTipoRecogida();

            if (Recogida == null) {
                Recogida = "";
            }
            String cantidad=String.valueOf(t.getCantidadPales());
            
            String[] Tarea = {codigo, tarea, fruta, variedad,t.getFecha() ,Recogida,cantidad};

            tablaTarea.addRow(Tarea);
        }

    }

    /**
     * obtenemos las tareas
     */
    private void obtenerTareas() {
        Tareas = consultas.ObtenerTareas();
    }

    /**
     * obtenemos las tareas
     */
    private void obtenerRegistroTareas() {
        try {
            Connection conn = cbd.abrirConexion();
            String sql = "SELECT rt.id_Cuadrilla,t.nombre, f.nombre,f.variedad,rt.fecha\n"
                    + "from ((registro_tareas rt INNER JOIN tareas t on t.Cod_Tarea=rt.id_Tarea)\n"
                    + "      inner JOIN fruta f on f.Cod_Fruta=rt.id_Fruta);";

            Statement s = conn.createStatement();
            ResultSet rs = s.executeQuery(sql);
            // Recorremos el resultado, mientras haya registros para leer, y escribimos el resultado en pantalla.
            while (rs.next()) {
                int codigoCuadrilla = rs.getInt(1);
                String Cod = String.valueOf(codigoCuadrilla);
                String nombreTarea = rs.getString(2);
                String nombreFruta = rs.getString(3);
                String Variedad = rs.getString(4);
                Date fech = rs.getDate(5);
                String Fecha = String.valueOf(fech);
                String[] registro = {Cod, nombreTarea, nombreFruta,Variedad ,Fecha};
                tablaRegistroTarea.addRow(registro);
            }

            cbd.cerrarConexion();
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

    }

    private void agregarModeloTablaregistros() {
        tablaRegistroTarea.addColumn("Cuadrilla");
        tablaRegistroTarea.addColumn("Tarea");
        tablaRegistroTarea.addColumn("nombre Fruta");
        tablaRegistroTarea.addColumn("Variedad Fruta");
        tablaRegistroTarea.addColumn("Fecha");
    }

}
